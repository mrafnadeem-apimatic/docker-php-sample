<?php

declare(strict_types=1);

/*
 * OrdersLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace OrdersLib\Models;

use OrdersLib\ApiHelper;
use stdClass;

class PaypalMockResponseSchema implements \JsonSerializable
{
    /**
     * @var string
     */
    private $mockApplicationCodes;

    /**
     * @param string $mockApplicationCodes
     */
    public function __construct(string $mockApplicationCodes)
    {
        $this->mockApplicationCodes = $mockApplicationCodes;
    }

    /**
     * Returns Mock Application Codes.
     * The error code to simulate
     */
    public function getMockApplicationCodes(): string
    {
        return $this->mockApplicationCodes;
    }

    /**
     * Sets Mock Application Codes.
     * The error code to simulate
     *
     * @required
     * @maps mock_application_codes
     */
    public function setMockApplicationCodes(string $mockApplicationCodes): void
    {
        $this->mockApplicationCodes = $mockApplicationCodes;
    }

    /**
     * Converts the PaypalMockResponseSchema object to a human-readable string representation.
     *
     * @return string The string representation of the PaypalMockResponseSchema object.
     */
    public function __toString(): string
    {
        return ApiHelper::stringify(
            'PaypalMockResponseSchema',
            ['mockApplicationCodes' => $this->mockApplicationCodes]
        );
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        $json['mock_application_codes'] = $this->mockApplicationCodes;

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
